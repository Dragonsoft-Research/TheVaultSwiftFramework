// Generated by Apple Swift version 4.2 (swiftlang-1000.11.37.1 clang-1000.11.45.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="TheVaultFramework",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class account;

SWIFT_CLASS("_TtC17TheVaultFramework12AccountsData")
@interface AccountsData : NSObject
@property (nonatomic) BOOL success;
@property (nonatomic, copy) NSArray<account *> * _Nonnull accounts;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSuccess:(BOOL)success accounts:(NSArray<account *> * _Nonnull)accounts OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC17TheVaultFramework20AddDeleteFavoriteAPI")
@interface AddDeleteFavoriteAPI : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull address;
@property (nonatomic, readonly, copy) NSString * _Nonnull nickname;
@property (nonatomic, readonly, copy) NSString * _Nonnull currency;
- (nonnull instancetype)initWithAddress:(NSString * _Nonnull)address nickname:(NSString * _Nonnull)nickname currency:(NSString * _Nonnull)currency OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17TheVaultFramework20AddTokenToAccountAPI")
@interface AddTokenToAccountAPI : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull account;
@property (nonatomic, readonly, copy) NSString * _Nonnull symbol;
- (nonnull instancetype)initWithAccount:(NSString * _Nonnull)account symbol:(NSString * _Nonnull)symbol OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17TheVaultFramework10AddressAPI")
@interface AddressAPI : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull account;
- (nonnull instancetype)initWithAccount:(NSString * _Nonnull)account OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17TheVaultFramework11BalanceData")
@interface BalanceData : NSObject
@property (nonatomic, copy) NSString * _Nonnull balance;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBalance:(NSString * _Nonnull)balance OBJC_DESIGNATED_INITIALIZER;
@end

enum OCBitcoinUnit : NSInteger;

SWIFT_CLASS("_TtC17TheVaultFramework16BtcUnitConverter")
@interface BtcUnitConverter : NSObject
+ (double)toSatoshi:(double)value from:(enum OCBitcoinUnit)from SWIFT_WARN_UNUSED_RESULT;
+ (double)fromSatoshi:(double)value to:(enum OCBitcoinUnit)to SWIFT_WARN_UNUSED_RESULT;
+ (double)convertWithCurrentUnit:(enum OCBitcoinUnit)currentUnit value:(double)value to:(enum OCBitcoinUnit)to SWIFT_WARN_UNUSED_RESULT;
+ (enum OCBitcoinUnit)getBestUnit:(double)satoshiValue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, OCBitcoinUnit, closed) {
  OCBitcoinUnitBTC = 0,
  OCBitcoinUnitCentBTC = 1,
  OCBitcoinUnitMilliBTC = 2,
  OCBitcoinUnitMicroBTC = 3,
  OCBitcoinUnitFinney = 4,
  OCBitcoinUnitSatoshi = 5,
};


SWIFT_CLASS("_TtC17TheVaultFramework17ChangePasswordAPI")
@interface ChangePasswordAPI : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull password;
- (nonnull instancetype)initWithPassword:(NSString * _Nonnull)password OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17TheVaultFramework16CheckUsernameAPI")
@interface CheckUsernameAPI : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull username;
- (nonnull instancetype)initWithUsername:(NSString * _Nonnull)username OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class CoinItem;

SWIFT_CLASS("_TtC17TheVaultFramework8CoinData")
@interface CoinData : NSObject
@property (nonatomic, readonly, copy) NSArray<CoinItem *> * _Nonnull coins;
@end


SWIFT_CLASS("_TtC17TheVaultFramework8CoinItem")
@interface CoinItem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull symbol;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull image;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nullable subtype;
@end


SWIFT_CLASS("_TtC17TheVaultFramework16CreateAccountAPI")
@interface CreateAccountAPI : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull nickname;
@property (nonatomic, readonly, copy) NSString * _Nonnull wpw;
- (nonnull instancetype)initWithNickname:(NSString * _Nonnull)nickname wpw:(NSString * _Nonnull)wpw OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class CAD;

SWIFT_CLASS("_TtC17TheVaultFramework17CreateAccountData")
@interface CreateAccountData : NSObject
@property (nonatomic) BOOL success;
@property (nonatomic, strong) CAD * _Nullable data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSuccess:(BOOL)success data:(CAD * _Nullable)data OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC17TheVaultFramework13CreateUserAPI")
@interface CreateUserAPI : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull username;
@property (nonatomic, readonly, copy) NSString * _Nonnull password;
@property (nonatomic, readonly, copy) NSString * _Nonnull fullname;
@property (nonatomic, readonly, copy) NSString * _Nonnull secureWord;
@property (nonatomic, readonly, copy) NSString * _Nonnull question;
@property (nonatomic, readonly, copy) NSString * _Nonnull answer;
- (nonnull instancetype)initWithUsername:(NSString * _Nonnull)username password:(NSString * _Nonnull)password fullname:(NSString * _Nonnull)fullname secureWord:(NSString * _Nonnull)secureWord question:(NSString * _Nonnull)question answer:(NSString * _Nonnull)answer OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17TheVaultFramework10Erc20Token")
@interface Erc20Token : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull address;
@property (nonatomic, readonly, copy) NSString * _Nonnull symbol;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull subtype;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull desc;
@property (nonatomic, readonly, copy) NSString * _Nonnull image;
@property (nonatomic, readonly, copy) NSString * _Nonnull balance;
@property (nonatomic, readonly, copy) NSString * _Nonnull decimal;
@end


SWIFT_CLASS("_TtC17TheVaultFramework14Erc20TokenData")
@interface Erc20TokenData : NSObject
@property (nonatomic, readonly, copy) NSArray<Erc20Token *> * _Nonnull tokens;
@end


SWIFT_CLASS("_TtC17TheVaultFramework16EthUnitConverter")
@interface EthUnitConverter : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC17TheVaultFramework12ExchangeData")
@interface ExchangeData : NSObject
@property (nonatomic, readonly) double USD;
@end


SWIFT_CLASS("_TtC17TheVaultFramework15ExportWalletAPI")
@interface ExportWalletAPI : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull account;
@property (nonatomic, readonly, copy) NSString * _Nonnull password;
- (nonnull instancetype)initWithAccount:(NSString * _Nonnull)account password:(NSString * _Nonnull)password OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17TheVaultFramework16ExportWalletData")
@interface ExportWalletData : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull wallet;
@end

@class favorite;

SWIFT_CLASS("_TtC17TheVaultFramework13FavoritesData")
@interface FavoritesData : NSObject
@property (nonatomic) BOOL success;
@property (nonatomic, copy) NSArray<favorite *> * _Nonnull favorites;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSuccess:(BOOL)success favorites:(NSArray<favorite *> * _Nonnull)favorites OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC17TheVaultFramework18GetTokenBalanceAPI")
@interface GetTokenBalanceAPI : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull account;
@property (nonatomic, readonly, copy) NSString * _Nonnull symbol;
- (nonnull instancetype)initWithAccount:(NSString * _Nonnull)account symbol:(NSString * _Nonnull)symbol OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class GetUserDetails;

SWIFT_CLASS("_TtC17TheVaultFramework17GetUserDetailsAPI")
@interface GetUserDetailsAPI : NSObject
@property (nonatomic, strong) GetUserDetails * _Nonnull getUserDeatils;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class Transaction;

SWIFT_CLASS("_TtC17TheVaultFramework7Globals")
@interface Globals : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull SERVER;)
+ (NSString * _Nonnull)SERVER SWIFT_WARN_UNUSED_RESULT;
+ (void)setSERVER:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull EXCHANGE;)
+ (NSString * _Nonnull)EXCHANGE SWIFT_WARN_UNUSED_RESULT;
+ (void)setEXCHANGE:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull APIKEY;)
+ (NSString * _Nonnull)APIKEY SWIFT_WARN_UNUSED_RESULT;
+ (void)setAPIKEY:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL Authenticated;)
+ (BOOL)Authenticated SWIFT_WARN_UNUSED_RESULT;
+ (void)setAuthenticated:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Token;)
+ (NSString * _Nonnull)Token SWIFT_WARN_UNUSED_RESULT;
+ (void)setToken:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<account *> * _Nullable Accounts;)
+ (NSArray<account *> * _Nullable)Accounts SWIFT_WARN_UNUSED_RESULT;
+ (void)setAccounts:(NSArray<account *> * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<favorite *> * _Nullable Favorites;)
+ (NSArray<favorite *> * _Nullable)Favorites SWIFT_WARN_UNUSED_RESULT;
+ (void)setFavorites:(NSArray<favorite *> * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull CurrentSymbol;)
+ (NSString * _Nonnull)CurrentSymbol SWIFT_WARN_UNUSED_RESULT;
+ (void)setCurrentSymbol:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) NSInteger CurrentAccount;)
+ (NSInteger)CurrentAccount SWIFT_WARN_UNUSED_RESULT;
+ (void)setCurrentAccount:(NSInteger)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) double CurrencyAmount;)
+ (double)CurrencyAmount SWIFT_WARN_UNUSED_RESULT;
+ (void)setCurrencyAmount:(double)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<Transaction *> * _Nonnull Transactions;)
+ (NSArray<Transaction *> * _Nonnull)Transactions SWIFT_WARN_UNUSED_RESULT;
+ (void)setTransactions:(NSArray<Transaction *> * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull PushToken;)
+ (NSString * _Nonnull)PushToken SWIFT_WARN_UNUSED_RESULT;
+ (void)setPushToken:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL DeviceRegistered;)
+ (BOOL)DeviceRegistered SWIFT_WARN_UNUSED_RESULT;
+ (void)setDeviceRegistered:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) double ExchangeRate;)
+ (double)ExchangeRate SWIFT_WARN_UNUSED_RESULT;
+ (void)setExchangeRate:(double)value;
+ (NSString * _Nullable)findInInternalAccounts:(NSString * _Nonnull)address SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC17TheVaultFramework16ImportAccountAPI")
@interface ImportAccountAPI : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull account;
@property (nonatomic, readonly, copy) NSString * _Nonnull privateKey;
@property (nonatomic, readonly, copy) NSString * _Nonnull nickname;
- (nonnull instancetype)initWithAccount:(NSString * _Nonnull)account privateKey:(NSString * _Nonnull)privateKey nickname:(NSString * _Nonnull)nickname OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17TheVaultFramework8LoginAPI")
@interface LoginAPI : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull username;
@property (nonatomic, readonly, copy) NSString * _Nonnull password;
- (nonnull instancetype)initWithUsername:(NSString * _Nonnull)username password:(NSString * _Nonnull)password OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17TheVaultFramework9LoginData")
@interface LoginData : NSObject
@property (nonatomic) BOOL success;
@property (nonatomic, copy) NSString * _Nonnull token;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSuccess:(BOOL)success token:(NSString * _Nonnull)token OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC17TheVaultFramework12MerchantData")
@interface MerchantData : NSObject
@property (nonatomic, copy) NSString * _Nonnull apikey;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nonnull symbol;
@property (nonatomic, copy) NSString * _Nonnull receiveAddress;
@property (nonatomic, copy) NSString * _Nonnull orderid;
@property (nonatomic, copy) NSString * _Nonnull amount;
@property (nonatomic, copy) NSString * _Nonnull currency;
@property (nonatomic, copy) NSString * _Nonnull baseCryptoAmount;
- (nonnull instancetype)initWithApikey:(NSString * _Nonnull)apikey name:(NSString * _Nonnull)name symbol:(NSString * _Nonnull)symbol receiveAddress:(NSString * _Nonnull)receiveAddress orderid:(NSString * _Nonnull)orderid amount:(NSString * _Nonnull)amount currency:(NSString * _Nonnull)currency baseCryptoAmount:(NSString * _Nonnull)baseCryptoAmount OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17TheVaultFramework16NotificationData")
@interface NotificationData : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull txHash;
@property (nonatomic, readonly, copy) NSString * _Nonnull to;
@property (nonatomic, readonly, copy) NSString * _Nonnull from;
@property (nonatomic, readonly, copy) NSString * _Nonnull value;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@end


SWIFT_CLASS("_TtC17TheVaultFramework17RegisterDeviceAPI")
@interface RegisterDeviceAPI : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull userid;
@property (nonatomic, readonly, copy) NSString * _Nonnull pushToken;
@property (nonatomic, readonly, copy) NSString * _Nonnull platform;
@property (nonatomic, readonly, copy) NSString * _Nonnull device;
@property (nonatomic, readonly, copy) NSString * _Nonnull os;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17TheVaultFramework16RegistrationData")
@interface RegistrationData : NSObject
@property (nonatomic, readonly) BOOL success;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSuccess:(BOOL)success OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC17TheVaultFramework12SendTokenAPI")
@interface SendTokenAPI : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull account;
@property (nonatomic, readonly, copy) NSString * _Nonnull to;
@property (nonatomic, readonly, copy) NSString * _Nonnull value;
@property (nonatomic, readonly, copy) NSString * _Nonnull txFee;
@property (nonatomic, readonly, copy) NSString * _Nonnull symbol;
@property (nonatomic, readonly, copy) NSString * _Nullable memo;
@property (nonatomic, readonly, strong) MerchantData * _Nullable merchant;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17TheVaultFramework18SendTransactionAPI")
@interface SendTransactionAPI : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull account;
@property (nonatomic, readonly, copy) NSString * _Nonnull to;
@property (nonatomic, readonly, copy) NSString * _Nonnull value;
@property (nonatomic, readonly, copy) NSString * _Nonnull txFee;
@property (nonatomic, readonly, copy) NSString * _Nullable memo;
@property (nonatomic, readonly, strong) MerchantData * _Nullable merchant;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17TheVaultFramework21SetAccountNicknameAPI")
@interface SetAccountNicknameAPI : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull account;
@property (nonatomic, readonly, copy) NSString * _Nonnull nickname;
- (nonnull instancetype)initWithAccount:(NSString * _Nonnull)account nickname:(NSString * _Nonnull)nickname OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17TheVaultFramework23SimpleOperationResponse")
@interface SimpleOperationResponse : NSObject
@property (nonatomic, readonly) BOOL success;
@property (nonatomic, readonly, copy) NSString * _Nullable error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17TheVaultFramework5TInfo")
@interface TInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull symbol;
@property (nonatomic, readonly) NSInteger decimals;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull image;
@property (nonatomic, readonly, copy) NSString * _Nonnull balance;
@end


SWIFT_CLASS("_TtC17TheVaultFramework9TokenInfo")
@interface TokenInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull symbol;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull decimals;
@property (nonatomic, readonly, copy) NSString * _Nonnull contractAddress;
@end


SWIFT_CLASS("_TtC17TheVaultFramework12TokenInfoAPI")
@interface TokenInfoAPI : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull symbol;
- (nonnull instancetype)initWithSymbol:(NSString * _Nonnull)symbol OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17TheVaultFramework13TokenInfoData")
@interface TokenInfoData : NSObject
@end

@class TokenTransactionItem;

SWIFT_CLASS("_TtC17TheVaultFramework20TokenTransactionData")
@interface TokenTransactionData : NSObject
@property (nonatomic, readonly) BOOL success;
@property (nonatomic, readonly, copy) NSArray<TokenTransactionItem *> * _Nonnull transactions;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSuccess:(BOOL)success transactions:(NSArray<TokenTransactionItem *> * _Nonnull)transactions OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC17TheVaultFramework20TokenTransactionItem")
@interface TokenTransactionItem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull txhash;
@property (nonatomic, readonly) NSInteger blockNumber;
@property (nonatomic, readonly, copy) NSString * _Nullable blockHash;
@property (nonatomic, readonly) NSInteger transactionIndex;
@property (nonatomic, readonly) NSInteger confirmations;
@property (nonatomic, readonly) double value;
@property (nonatomic, readonly, copy) NSString * _Nonnull from;
@property (nonatomic, readonly, copy) NSString * _Nonnull to;
@property (nonatomic, readonly) double timestamp;
@property (nonatomic, readonly, copy) NSString * _Nullable memo;
@property (nonatomic, readonly, copy) NSDate * _Nonnull timestampAsUTCDate;
@property (nonatomic, readonly, copy) NSString * _Nonnull localDateTimeString;
@end


SWIFT_CLASS("_TtC17TheVaultFramework15TransactionData")
@interface TransactionData : NSObject
@property (nonatomic, readonly) BOOL success;
@property (nonatomic, readonly, copy) NSArray<Transaction *> * _Nonnull transactions;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSuccess:(BOOL)success transactions:(NSArray<Transaction *> * _Nonnull)transactions OBJC_DESIGNATED_INITIALIZER;
@end

@class Receipt;

SWIFT_CLASS("_TtC17TheVaultFramework22TransactionReceiptData")
@interface TransactionReceiptData : NSObject
@property (nonatomic, readonly) BOOL success;
@property (nonatomic, readonly, strong) Receipt * _Nonnull receipt;
@end


SWIFT_CLASS("_TtC17TheVaultFramework4User")
@interface User : NSObject
@property (nonatomic, copy) NSString * _Nonnull userid;
@property (nonatomic, copy) NSString * _Nonnull fullName;
@property (nonatomic, copy) NSString * _Nonnull address;
@property (nonatomic, copy) NSString * _Nonnull receiveAddress;
@property (nonatomic, copy) NSString * _Nonnull type;
@property (nonatomic, copy) NSString * _Nonnull nickname;
@property (nonatomic, copy) NSString * _Nonnull lastUpdated;
@property (nonatomic, copy) NSString * _Nonnull balance;
@property (nonatomic, copy) NSString * _Nonnull image;
@property (nonatomic, copy) NSArray<TInfo *> * _Nullable tokens;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC17TheVaultFramework8UserData")
@interface UserData : NSObject
@property (nonatomic) BOOL success;
@property (nonatomic, copy) NSArray<User *> * _Nonnull users;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSuccess:(BOOL)success users:(NSArray<User *> * _Nonnull)users OBJC_DESIGNATED_INITIALIZER;
+ (UserData * _Nullable)get SWIFT_WARN_UNUSED_RESULT;
- (void)save;
@end

@protocol VaultWalletEventsDelegate;

SWIFT_CLASS("_TtC17TheVaultFramework14VaultWalletApi")
@interface VaultWalletApi : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) id <VaultWalletEventsDelegate> _Nullable walletEventsDelegate;)
+ (id <VaultWalletEventsDelegate> _Nullable)walletEventsDelegate SWIFT_WARN_UNUSED_RESULT;
+ (void)setWalletEventsDelegate:(id <VaultWalletEventsDelegate> _Nullable)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (NSString * _Nonnull)ApiVersion SWIFT_WARN_UNUSED_RESULT;
+ (void)SetTokenWithToken:(NSString * _Nonnull)token;
+ (void)SetCoinWithCoin:(NSString * _Nonnull)coin;
+ (void)SetServerUrlWithUrl:(NSString * _Nonnull)url;
+ (NSString * _Nonnull)GetServerUrl SWIFT_WARN_UNUSED_RESULT;
+ (void)SetApiKeyWithApikey:(NSString * _Nonnull)apikey;
+ (void)RegisterDeviceWithUserName:(NSString * _Nonnull)userName pushToken:(NSString * _Nonnull)pushToken;
+ (void)CheckUsernameWithUsername:(NSString * _Nonnull)username completionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
+ (void)GetAccountsWithCompletionHandler:(void (^ _Nonnull)(AccountsData * _Nullable, NSError * _Nullable))completionHandler;
+ (void)GetFavoritesWithCompletionHandler:(void (^ _Nonnull)(FavoritesData * _Nullable, NSError * _Nullable))completionHandler;
+ (void)AddFavoriteWithAddress:(NSString * _Nonnull)address nickname:(NSString * _Nonnull)nickname currency:(NSString * _Nonnull)currency completionHandler:(void (^ _Nonnull)(SimpleOperationResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)DeleteFavoriteWithAddress:(NSString * _Nonnull)address nickname:(NSString * _Nonnull)nickname currency:(NSString * _Nonnull)currency completionHandler:(void (^ _Nonnull)(SimpleOperationResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)GetBalanceWithAccount:(NSString * _Nonnull)account completionHandler:(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completionHandler;
+ (void)GetBalanceWithAccount:(NSString * _Nonnull)account symbol:(NSString * _Nonnull)symbol completionHandler:(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completionHandler;
+ (void)LoginWithUserName:(NSString * _Nonnull)userName password:(NSString * _Nonnull)password completionHandler:(void (^ _Nonnull)(LoginData * _Nullable, NSError * _Nullable))completionHandler;
+ (void)SendTransactionTo:(NSString * _Nonnull)to value:(double)value unit:(NSString * _Nonnull)unit txFee:(NSString * _Nonnull)txFee memo:(NSString * _Nonnull)memo merchant:(MerchantData * _Nullable)merchant completionHandler:(void (^ _Nonnull)(SimpleOperationResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)SendTokenTo:(NSString * _Nonnull)to value:(NSString * _Nonnull)value token:(NSString * _Nonnull)token txFee:(NSString * _Nonnull)txFee memo:(NSString * _Nonnull)memo merchant:(MerchantData * _Nullable)merchant completionHandler:(void (^ _Nonnull)(SimpleOperationResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)GetTransactionsForTokenWithAccount:(NSString * _Nonnull)account symbol:(NSString * _Nonnull)symbol completionHandler:(void (^ _Nonnull)(NSArray<TokenTransactionItem *> * _Nullable, NSError * _Nullable))completionHandler;
+ (void)GetTransactionsWithAccount:(NSString * _Nonnull)account completionHandler:(void (^ _Nonnull)(TransactionData * _Nullable, NSError * _Nullable))completionHandler;
+ (void)GetExchangeRateWithCompletionHandler:(void (^ _Nonnull)(ExchangeData * _Nullable, NSError * _Nullable))completionHandler;
+ (void)CreateUserWithUsername:(NSString * _Nonnull)username password:(NSString * _Nonnull)password fullname:(NSString * _Nonnull)fullname secureWord:(NSString * _Nonnull)secureWord question:(NSString * _Nonnull)question answer:(NSString * _Nonnull)answer completionHandler:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completionHandler;
+ (void)CreateAccountWithNickname:(NSString * _Nonnull)nickname password:(NSString * _Nonnull)password completionHandler:(void (^ _Nonnull)(CreateAccountData * _Nullable, NSError * _Nullable))completionHandler;
+ (void)SetNicknameForAccountWithAccount:(NSString * _Nonnull)account nickname:(NSString * _Nonnull)nickname completionHandler:(void (^ _Nonnull)(SimpleOperationResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)GetCoinListWithCompletionHandler:(void (^ _Nonnull)(CoinData * _Nullable, NSError * _Nullable))completionHandler;
+ (void)GetTokensForAccountWithAccount:(NSString * _Nonnull)account completionHandler:(void (^ _Nonnull)(NSArray<Erc20Token *> * _Nullable, NSError * _Nullable))completionHandler;
+ (void)AddTokenToAccountWithAccount:(NSString * _Nonnull)account token:(NSString * _Nonnull)token completionHandler:(void (^ _Nonnull)(SimpleOperationResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)RemoveTokenFromAccountWithAccount:(NSString * _Nonnull)account token:(NSString * _Nonnull)token completionHandler:(void (^ _Nonnull)(SimpleOperationResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)GetTokenInfoWithToken:(NSString * _Nonnull)token completionHandler:(void (^ _Nonnull)(TokenInfo * _Nullable, NSError * _Nullable))completionHandler;
+ (void)ChangePasswordWithPassword:(NSString * _Nonnull)password completionHandler:(void (^ _Nonnull)(SimpleOperationResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)ImportAccountWithAccount:(NSString * _Nonnull)account privateKey:(NSString * _Nonnull)privateKey nickname:(NSString * _Nonnull)nickname completionHandler:(void (^ _Nonnull)(CreateAccountData * _Nullable, NSError * _Nullable))completionHandler;
+ (void)ExportAccountWithAccount:(NSString * _Nonnull)account password:(NSString * _Nonnull)password completionHandler:(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completionHandler;
@end

enum WalletEvent : NSInteger;

SWIFT_PROTOCOL("_TtP17TheVaultFramework25VaultWalletEventsDelegate_")
@protocol VaultWalletEventsDelegate
- (void)didReceiveTransactionEvent:(enum WalletEvent)type data:(NotificationData * _Nonnull)data;
@optional
- (void)didReceiveDebugEventWithData:(NSString * _Nonnull)data;
- (void)didReceiveBroadcastWithData:(NSString * _Nonnull)data;
@end

typedef SWIFT_ENUM(NSInteger, WalletEvent, closed) {
  WalletEventTransactionStatus = 0,
  WalletEventNewTransaction = 1,
  WalletEventDebugInfo = 2,
};

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
